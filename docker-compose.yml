version: '3.8'

services:
  darm-processor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: darm-processor-go
    image: darm-processor:1.0.0
    environment:
      - GO_ENV=production
      - TZ=America/Sao_Paulo
    volumes:
      # Volume para PDFs dos DARMs
      - ./darms:/app/darms:ro
      # Volume para arquivos SQL gerados
      - ./inserts:/app/inserts
      # Volume para configurações (opcional)
      - ./config.json:/app/config.json:ro
    working_dir: /app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "./darm-processor", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - darm-network

  # Serviço de desenvolvimento (opcional)
  darm-processor-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: darm-processor-go-dev
    image: darm-processor:dev
    environment:
      - GO_ENV=development
      - TZ=America/Sao_Paulo
    volumes:
      # Volume para código fonte (hot reload)
      - .:/app
      # Volume para PDFs dos DARMs
      - ./darms:/app/darms:ro
      # Volume para arquivos SQL gerados
      - ./inserts:/app/inserts
    working_dir: /app
    command: ["go", "run", "main.go"]
    profiles:
      - dev
    networks:
      - darm-network

  # Serviço de testes (opcional)
  darm-processor-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: darm-processor-go-test
    image: darm-processor:test
    environment:
      - GO_ENV=test
      - TZ=America/Sao_Paulo
    volumes:
      - .:/app
    working_dir: /app
    command: ["go", "test", "-v", "./..."]
    profiles:
      - test
    networks:
      - darm-network

networks:
  darm-network:
    driver: bridge
    name: darm-network

volumes:
  darms-data:
    driver: local
  inserts-data:
    driver: local
  logs-data: 